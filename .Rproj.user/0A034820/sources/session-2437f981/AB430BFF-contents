% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{Main}
\alias{Main}
\title{Main model fitting function}
\usage{
Main(
  Y,
  delta,
  X,
  iteration,
  burnin,
  nchain,
  tau = NULL,
  nu0 = 5,
  sigma0 = NULL,
  p1 = NULL,
  p0 = NULL,
  sigmal = NULL,
  alpha1 = NULL,
  alpha2 = NULL,
  dependency = TRUE,
  strength = TRUE,
  ETA,
  S
)
}
\arguments{
\item{Y}{A list of response values in regressions}

\item{delta}{A list of survival status (1 being deceased/uncensored and 0 being alive/censored)}

\item{X}{A list of design matrices in regressions}

\item{iteration}{The number of MCMC iterations}

\item{burnin}{The number of burn-in iterations}

\item{nchain}{The number of MCMC chains}

\item{dependency}{Whether to use the ISP prior; A value of TRUE means creating dependencies among SNPs}

\item{strength}{Whether to borrow strength across regressions using MRF prior}

\item{ETA}{A matrix of pairwise gene ontology similarity scores with a length of G-1}

\item{S}{A K-by-K symmetric matrix of disease ontology similarities}
}
\value{
A large list of all the parameter values
}
\description{
This is the main model fitting function for Bayesian framework with GO and DO information.
}
\details{
This function is used to fit a Baeysian regression model.
}
\examples{
library(mvtnorm)
K = 5
G = 10
lower = c(0.55, 0.55, 0.55, 0.55, 0.55)
upper = c(0.6, 0.6, 0.6, 0.6, 0.6)
Nk = c(10, 20, 30, 40, 50)
GAMMA = matrix(0, nrow = K, ncol = P)
GAMMA[1, 1:3] = 1
GAMMA[2, 1:3] = 1
GAMMA[3, 1:3] = 1
GAMMA[4, 1:3] = 1
GAMMA[5, 1:3] = 1
Y = lapply(Nk, function(l) rep(0, l))
BETA = matrix(1, nrow = K, ncol = G)
sigma = lapply(Nk, function(l) rep(0, l))
ck = list(N1 = rep(1, Nk[1]), N2 = rep(2, Nk[2]),
          N3 = rep(3, Nk[3]), N4 = rep(4, Nk[4]),
          N5 = rep(5, Nk[5]))
delta = list()

gene_list = c("TRPM3", "PKD2", "KCNJ16", "KCNJ15", "SLC2A11",
              "SLC2A9", "OSCP1", "SLC27A1", "SLC27A2", "SLC25A4")
hsGO = godata('org.Hs.eg.db', keytype = "SYMBOL", ont = "MF", computeIC = FALSE)
ETA = mgeneSim(gene_list, semData = hsGO, measure = "Wang",
               combine = "BMA", verbose = FALSE)
S = doSim(c("DOID:4471", "DOID:4467", "DOID:4465", "DOID:3910", "DOID:3907"),
          c("DOID:4471", "DOID:4467", "DOID:4465", "DOID:3910", "DOID:3907"), measure = "Wang")

for (k in 1:K) {
 X[[k]] = matrix(rmvnorm(Nk[k], sigma = SigmaX), nrow = Nk[k], byrow = TRUE)
 sigma[[k]] = rnorm(Nk[k], 0, 1)
 Y[[k]] = X[[k]] \%*\% (GAMMA[k, ] * BETA[k, ]) + sigma[[k]]
 ck[[k]] = runif(Nk[k], quantile(Y[[k]], lower[k]), quantile(Y[[k]], upper[k]))
 delta[[k]] = as.numeric(Y[[k]] <= ck[[k]])
 Y[[k]] = pmin(Y[[k]], ck[[k]])
}

t0 = Sys.time()
res = Main(Y, delta, X, iteration = 5000, burnin = 3500, nchain = 1, ETA = ETA, S = S)
Sys.time() - t0

}
